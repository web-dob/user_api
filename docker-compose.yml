version: "3.8"

services:
  dobapp_postgres:
    image: postgres:15
    container_name: dobapp_postgres
    restart: unless-stopped
    environment:
        PGUSER: ${POSTGRES_USER}
        POSTGRES_DB: ${POSTGRES_DB}
        POSTGRES_USER: ${POSTGRES_USER}
        POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - ~/.pg/pg_data/app:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -d ${POSTGRES_DB} -U ${POSTGRES_USER}"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: 4G

  dobapp_project:
    build:
      context: .
      dockerfile: ./Dockerfile
    container_name: dobapp_django
    tty: true
    env_file:
      - .env
    expose:
      - 8000
    depends_on:
      dobapp_postgres:
        condition: service_healthy
    volumes:
      - static_volume:/app/static
      - media_volume:/app/media
    command: >
      bash -c "./manage.py collectstatic --noinput
      && ./manage.py migrate
      && python manage.py
      && gunicorn -b 0.0.0.0:8000 app.wsgi:application"
  nginx:
    build:
      dockerfile: ./Dockerfile
      context: ./docker/nginx/
    container_name: dobapp_nginx
    expose:
        - 80
    volumes:
      - static_volume:/app/static
      - media_volume:/app/media
    depends_on:
      - dobapp_project
    ports:
      - "${NGINX_EXTERNAL_PORT}:80"

volumes:
  static_volume:
  media_volume:
